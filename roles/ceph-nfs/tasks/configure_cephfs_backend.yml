---
- name: config_cephfs | Create directory for nfs root
  command: /usr/bin/cephfs-shell "mkdir -m 755 -p /{{ ceph_nfs_fs_root }}"
  delegate_to: "{{ groups[mon_group_name][0] }}"
  run_once: true

- name: config_cephfs | Create NFS cephx user
  ceph_key:
    name: "{{ item.name }}"
    state: present
    caps: "{{ item.caps }}"
    cluster: "{{ cluster }}"
    secret: "{{ item.key | default('') }}"
  with_items: "{{ nfs_keyring }}"
  delegate_to: "{{ groups[mon_group_name][0] }}"

- name: config_cephfs | Write NFS cephx keyring to gateway
  block:
    - name: get nfs cephx keyring
      command: "ceph auth get {{ item.name }}"
      register: keyring_output
      changed_when: false
      with_items: "{{ nfs_keyring }}"
      delegate_to: "{{ groups[mon_group_name][0] }}"

    - name: write nfs cephx keyring
      copy:
        content: "{{ item.stdout }}\n"
        dest: "/etc/ceph/ceph.{{ item.item.name }}.keyring"
        force: yes
        owner: root
        group: root
        mode: "0600"
      with_items: "{{ keyring_output.results }}"

- import_role:
    name: ceph-facts
    tasks_from: get_def_crush_rule_name.yml

- name: gather osd device classes
  shell: ceph osd df --format json | jq -r '.nodes | .[].device_class'
  register: osd_device_class_list
  delegate_to: "{{ groups[mon_group_name][0] }}"

- name: create pool for nfs ganesha data non hybrid cluster only
  when:
    - '("hdd" in osd_device_class_list.stdout_lines and "ssd" not in osd_device_class_list.stdout_lines) or ("ssd" in osd_device_class_list.stdout_lines and "hdd" not in osd_device_class_list.stdout_lines)'
  delegate_to: "{{ groups[mon_group_name][0] }}"
  block:
    - name: create pool for nfs ganesha data non hybrid cluster
      ceph_pool:
        name: "{{ ceph_nfs_ganesha_pool }}"
        cluster: "{{ cluster }}"
        pg_num: 1
        pgp_num: 1
        application: "nfs_ganesha_conf"
        size: "{{ ceph_nfs_ganesha_pool.size | default(omit) }}"
        min_size: "{{ ceph_nfs_ganesha_pool.min_size | default(omit) }}"
        pool_type: "{{ ceph_nfs_ganesha_pool.type | default('replicated') }}"
        rule_name: "{{ ceph_osd_pool_default_crush_rule_name | default(omit) }}"
        erasure_profile: "{{ ceph_nfs_ganesha_pool.erasure_profile | default(omit) }}"
        pg_autoscale_mode: "{{ ceph_nfs_ganesha_pool.pg_autoscale_mode | default(omit) }}"
        target_size_ratio: "{{ ceph_nfs_ganesha_pool.target_size_ratio | default(omit) }}"
      delegate_to: "{{ groups[mon_group_name][0] }}"
      environment:
        CEPH_CONTAINER_IMAGE: "{{ ceph_docker_registry + '/' + ceph_docker_image + ':' + ceph_docker_image_tag if containerized_deployment else None }}"
        CEPH_CONTAINER_BINARY: "{{ container_binary }}"
      run_once: true

- name: create filesystem pools hybrid cluster only
  when:
    - '"hdd" in osd_device_class_list.stdout_lines'
    - '"ssd" in osd_device_class_list.stdout_lines'
  delegate_to: "{{ groups[mon_group_name][0] }}"
  block:
    - name: create pool for nfs ganesha data hybrid cluster
      ceph_pool:
        name: "{{ ceph_nfs_ganesha_pool }}"
        cluster: "{{ cluster }}"
        pg_num: 1
        pgp_num: 1
        application: "nfs_ganesha_conf"
        size: "{{ ceph_nfs_ganesha_pool.size | default(omit) }}"
        min_size: "{{ ceph_nfs_ganesha_pool.min_size | default(omit) }}"
        pool_type: "{{ ceph_nfs_ganesha_pool.type | default('replicated') }}"
        rule_name: "replicated_ssd"
        erasure_profile: "{{ ceph_nfs_ganesha_pool.erasure_profile | default(omit) }}"
        pg_autoscale_mode: "{{ ceph_nfs_ganesha_pool.pg_autoscale_mode | default(omit) }}"
        target_size_ratio: "{{ ceph_nfs_ganesha_pool.target_size_ratio | default(omit) }}"
      delegate_to: "{{ groups[mon_group_name][0] }}"
      environment:
        CEPH_CONTAINER_IMAGE: "{{ ceph_docker_registry + '/' + ceph_docker_image + ':' + ceph_docker_image_tag if containerized_deployment else None }}"
        CEPH_CONTAINER_BINARY: "{{ container_binary }}"
      run_once: true